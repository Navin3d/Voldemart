package gmc.project.voldemart.services;

import java.util.HashSet;
import java.util.Set;

import org.springframework.stereotype.Service;

import gmc.project.voldemart.commands.UpdateUserCommand;
import gmc.project.voldemart.converters.UserToUpdateUserCommand;
import gmc.project.voldemart.domain.User;
import gmc.project.voldemart.repositoies.UserRepository;

@Service
public class AdminServiceImpl implements AdminService {
	
	private final UserService userService;
	private final UserRepository userRepository;
	private final UserToUpdateUserCommand userToUpdateUserCommand;

	public AdminServiceImpl(UserRepository userRepository, UserService userService, UserToUpdateUserCommand userToUpdateUserCommand) {
		super();
		this.userService = userService;
		this.userRepository = userRepository;
		this.userToUpdateUserCommand = userToUpdateUserCommand;
	}
	
	public Set<User> findAllUser() {
		
		Set<User> allUser = new HashSet<>();
		
		userRepository.findAll().iterator()
			.forEachRemaining(allUser::add);
		
		return allUser;
		
	}

	@Override
	public UpdateUserCommand findUserCommandById(Long userId) {
		User foundUser = userService.findById(userId);
		return userToUpdateUserCommand.convert(foundUser);
	}

	@Override
	public void deleteUser(Long userId) {
		userRepository.deleteById(userId);
	}
	

}
