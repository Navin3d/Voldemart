package gmc.project.voldemart.controllers;

import java.security.Principal;

import javax.validation.Valid;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;

import gmc.project.voldemart.commands.CreateUserCommand;
import gmc.project.voldemart.commands.UpdateUserCommand;
import gmc.project.voldemart.services.ProductService;
import gmc.project.voldemart.services.UserService;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
public class UserController {
	
	public static String profileForm = "user/profileForm";
	public static String profile = "user/profile";
	
	private final UserService userService;
	private final ProductService productService;
	
	public UserController(UserService userService, ProductService productService) {
		super();
		this.userService = userService;
		this.productService = productService;
	}

	@GetMapping("/user/profile")
	public String getUserProfile(Principal authenticated, Model model) {
		
		model.addAttribute("user", userService.findUserByUserName(authenticated.getName()));
		
		return profile;
	}
	
	@GetMapping("/user/profile/edit")
	public String editUser(Principal authenticated, Model model) {
		model.addAttribute("user", userService.editUser(authenticated));
		return profileForm;
	}
	
	@GetMapping("/user/products")
	
	@GetMapping("/user/product/add")
	public String addProduct(Principal principal, Model model) {
		model.addAttribute("product", productService.addProduct(principal));
		return "product/productForm";
	}
	
	@PostMapping("/updateuser/")
	public String updateUser(@Valid @ModelAttribute("user") UpdateUserCommand updateUserCommand, BindingResult bindingResult) {
		
		if(bindingResult.hasErrors()) {
			bindingResult.getAllErrors().forEach(error -> log.debug(error.toString()));
			return profileForm;
		}
		
		userService.updateUser(updateUserCommand);
		
		return "redirect:/logout";
	}

}
